@using MedicalConsultation.WebApp.Services

@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        
        <a class="navbar-brand" href=""> @* <span class="bi bi-calendar2-month-nav-menu" aria-hidden="true"></span> *@Agendamentos</a>
        <img class="oi" src="https://img.icons8.com/?size=100&id=AUvrszBDVBO2&format=png&color=000000" />
        @* <img class="oi" src="https://img.icons8.com/?size=100&id=2wMXhj2MqAml&format=png&color=000000" /> *@
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" >
                @* <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> *@
                <img class="bi" src="https://img.icons8.com/?size=100&id=wFfu6zXx15Yk&format=png&color=000000"/> Home
            </NavLink>
        </div>
       @*  @if (isAuthenticated && UsuarioService.Medico)
        {
            <!-- Match="NavLinkMatch.All"-->
            <div class="nav-item px-3">
                <NavLink href="/doctorschedules" class="nav-link">
                <img class="bi" src="https://img.icons8.com/?size=100&id=3Ct72x2Fd7mT&format=png&color=000000" />  Calendário Médico
            </NavLink>
        </div>
        } *@
         <AuthorizeView>
            <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/schedules">
                <img class="bi" src="https://img.icons8.com/?size=100&id=28WzaxCdZhVK&format=png&color=000000" /> Agendamentos
            </NavLink>
        </div>
        </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <img class="bi" src="https://img.icons8.com/?size=100&id=IerOpHeUt2OH&format=png&color=000000"/>@context.User.Identity?.Name
                        @* <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span>  *@
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                            <img class="bi" src="https://img.icons8.com/?size=100&id=wPhfVWUu3RLr&format=png&color=000000"/> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        @* <span class="bi bi-person-nav-menu" aria-hidden="true"></span>  *@
                        <img class="bi" src="https://img.icons8.com/?size=100&id=IerOpHeUt2OH&format=png&color=000000"/>Registrar
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <img class="bi" src="https://img.icons8.com/?size=100&id=CLfEBls7m4qZ&format=png&color=000000" /> Login
                       @*  <img class="bi" src="https://img.icons8.com/?size=100&id=gYI9v0NbFgxC&format=png&color=000000" /> Login *@
                        @* <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login *@
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

